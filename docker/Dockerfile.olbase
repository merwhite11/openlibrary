FROM ubuntu:xenial

ENV LANG en_US.UTF-8

# required for postgres
ENV LC_ALL POSIX

# add openlibrary user
RUN groupadd -r openlibrary && useradd --no-log-init -r -g openlibrary openlibrary

RUN apt-get -qq update && apt-get install -y \
    nginx \
    authbind \
    postgresql \
    build-essential \
    git-core \
    memcached \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    curl \
    screen \
    npm \
    python-dev \
    python-pip \
    libgeoip-dev \
    python-lxml \
    python-psycopg2 \
    python-yaml

RUN npm install less -g && ln -s /usr/bin/nodejs /usr/bin/node

# enable users to bind to port 80
RUN touch /etc/authbind/byport/80 && chmod 777 /etc/authbind/byport/80

# Setup nginx
RUN ln -s /openlibrary/conf/nginx/sites-available/openlibrary.conf /etc/nginx/sites-available/ \
    && ln -s /etc/nginx/sites-available/openlibrary.conf /etc/nginx/sites-enabled/

RUN mkdir -p /var/log/openlibrary /var/lib/openlibrary \
    && chown openlibrary:openlibrary /var/log/openlibrary /var/lib/openlibrary

COPY --chown=openlibrary:openlibrary . /openlibrary
WORKDIR /openlibrary

RUN pip install -r requirements_common.txt

USER openlibrary
RUN ln -s vendor/infogami/infogami infogami
# run make to initialize git submodules, build css and js files
RUN make

# Expose Open Library and Infobase
EXPOSE 80 7000
CMD authbind --deep scripts/openlibrary-server conf/openlibrary-docker.yml \
    --gunicorn --workers 4 --timeout 180 --bind :80
